
# stsc_2_A

# price for patterns: mid
# price window: 30

# batch size: price window * 100

    a time series of length 1,000 and a batch size of 100 would create
    10 jobs where the first subsequence is 0 to 100.

# top matches: 10
The value selected for top matches should be at max (length(ts) / batch_size).

# crear archivo
$ A1_Temporal_Patterns.log

# -- para correr en servidor sin tener la terminal abierta + guardar logs en archivo +
# estar visualizando las impresiones en terminal en tiempo real.
$ sudo nohup python3 -u principal.py > A1_Temporal_Patterns_ludwing.log & tail -f A1_Temporal_Patterns_ludwing.log

# -- para terminar todos los procesos que hagan match con el valor en la columna COMMAND
$ sudo killall [name]

Ejemplo:

$ sudo killall python3

# -- borrar un archivo en especifico y solicitar confirmaci√≥n para doble seguridad
$ sudo rm -i [name.txt]

# comandos en vim para cerrar y salvar
:wq

# comandos en vim para cerrar sin salvar
:q

# -- borrar todos los archivos de un directorio
$ sudo rm /home/franciscome/A1_Temporal_Patterns/datos/results_files/*

# Transferir archivos del servidor a una compu local.
# correr esto desde la computadora local
scp -r ubuntu@148.201.129.217:/home/franciscome/directorioremoto /media/franciscome/directoriolocal

# Pasos para correr proyecto en cluster
# 1.- Crear archivo de logs en local: A1_Temporal_Patterns_Envy.log
# 2.- Crear archivo de logs en cluster: A1_Temporal_Patterns_Ludwing.log
# 3.- Revisar carpeta de resultados este vacia
# 4.- Revisar que scripts tengan toda la configuracion necesaria para correr en cluster
# 5.- Subir la ultima version del proyecto al repositorio
# 3.- Conectarse a Cluster
# 4.- Descargar la version actualizada del proyecto: sudo git pull origin master
