curve3d(1/(1-x^2-y^2), from=c(-10,-10),to=c(10,10), sys3d="rgl")
curve3d(1/(1-x^2-y^2), from=c(-10,-10),to=c(4,4), sys3d="rgl")
curve3d(1/(1-x^2-y^2), from=c(-10,-10),to=c(4,4), sys3d="pers")
curve3d(1/(1-x^2-y^2), from=c(-10,-10),to=c(4,4), sys3d="contour")
curve3d(1/(1-x^2-y^2), from=c(-10,-10),to=c(4,4), sys3d="wireframe")
x <- seq(-4, 4, length= 8)
y <- seq(-4, 4, length= 8)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=8,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-5, 5, length= 10)
y <- seq(-5, 5, length= 10)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=8,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-5, 5, length= 100)
y <- seq(-5, 5, length= 100)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=8,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-5, 5, length= 50)
y <- seq(-5, 5, length= 50)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=8,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 20)
y <- seq(-2, 2, length= 20)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=8,
xlab = "X", ylab = "Y", zlab = "Z")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=10,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 20)
y <- seq(-2, 2, length= 20)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=10,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 20)
y <- seq(-2, 2, length= 20)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=10,
xlab = "X", ylab = "Y", zlab = "Z")
z
x <- seq(-2, 2, length= 20)
y <- seq(-2, 2, length= 20)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=20,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 10)
y <- seq(-2, 2, length= 10)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=10,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 20)
y <- seq(-2, 2, length= 20)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=20,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 30)
y <- seq(-2, 2, length= 30)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=30,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 40)
y <- seq(-2, 2, length= 40)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=30,
xlab = "X", ylab = "Y", zlab = "Z")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=10,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 50)
y <- seq(-2, 2, length= 50)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=10,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 10)
y <- seq(-2, 2, length= 10)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=10,
xlab = "X", ylab = "Y", zlab = "Z")
x <- seq(-2, 2, length= 20)
y <- seq(-2, 2, length= 20)
f <- function(x, y) { r <- 1/(1-x^2-y^2) }
z <- outer(x, y, f)
# z[is.na(z)] <- 50
# z[is.infinite(z)] <- 50
op <- par(bg = "white")
persp(x, y, z, theta =30, phi=30, expand = .35,
ltheta = 60, shade = 0.5, ticktype = "detailed", nticks=10,
xlab = "X", ylab = "Y", zlab = "Z")
curve3d(1/(1-x^2-y^2), from=c(-10,-10),to=c(4,4), sys3d="wireframe")
curve3d(1/(1-x^2-y^2), from=c(-10,-10),to=c(4,4), sys3d="contour")
curve3d(1/(1-x^2-y^2), from=c(-2,-2),to=c(2,2), sys3d="contour")
x <- runif(1, 0, 1)
x
set.seed(1)
x <- runif(100, 0, 1)
x
set.seed(1)
x <- runif(10, 0, 1)
x
set.seed(1)
x <- runif(10, 0, 1)
x
rollapply(x, 3, sum, by = 3)
library(zoo)
rollapply(x, 3, sum, by = 3)
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
rollapply(x, 3, sum, by = 3)
x <- c(1, 1, 1, 2, 2, 2, 3, 3, 3)
rollapply(x, 3, sum, by = 3)
f1_hxn <- function(x, n){
for(i in 1<n) {
S <- 1 + x^i
}
}
resultado_1 <- f1_hxn(x=2, n=2)
f1_hxn <- function(x, n){
for(i in 1<n) {
S <- 1 + x^i
}
}
resultado_1 <- f1_hxn(x=2, n=2)
resultado_1
f1_hxn <- function(x, n){
for(i in 1<n) {
S <- 1 + x^i
}
return (S)
}
resultado_1 <- f1_hxn(x=2, n=2)
resultado_1
f2_hxn <- function(x, n){
while (i < n) {
S <- 1 + x^i
i + 1
}
return (S)
}
resultado_2 <- f2_hxn(x=2, n=2)
f2_hxn <- function(x, n){
while (n > 0) {
S <- 1 + x^i
n <- n - 1
}
return (S)
}
resultado_2 <- f2_hxn(x=2, n=2)
f2_hxn <- function(x, n){
while (n > 0) {
S <- 1 + x^n
n <- n - 1
}
return (S)
}
resultado_2 <- f2_hxn(x=2, n=2)
resultado_2
resultado_1
sum((x:n)^2)
f3_hxn <- function(x, n){
S <- sum((x:n)^2)
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
f3_hxn <- function(x, n){
S <- sum((1:n)^2)
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
resultado_2
resultado_1
f1_hxn <- function(x, n){
for(i in n) {
S <- 1 + x^i
}
return (S)
}
resultado_1 <- f1_hxn(x=2, n=2)
resultado_1
f1_hxn <- function(x, n){
for(i in n) {
S <- S + x^i
}
return (1 + S)
}
resultado_1 <- f1_hxn(x=2, n=2)
f1_hxn <- function(x, n){
S <- 1
for(i in n) {
S <- S + x^i
}
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
resultado_1
f1_hxn <- function(x, n){
S <- 1
for(i in n) {
print(S)
S <- S + x^i
}
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
f1_hxn <- function(x, n){
S <- 1
for(i in n) {
S
S <- S + x^i
}
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
print(S)
print(s)
f1_hxn <- function(x, n){
S <- 1
for(i in n) {
S <- S + x^i
}
S
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
resultado_1
f1_hxn <- function(x, n){
S <- 1
print(S)
for(i in n) {
S <- S + x^i
}
S
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
f1_hxn <- function(x, n){
S <- 1
for(i in n) {
S <- S + x^i
print(S)
}
S
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
resultado_1
f1_hxn <- function(x, n){
S <- 1
for(i in n) {
S <- S + x^i
print(1)
}
S
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
f1_hxn <- function(x, n){
S <- 1
for(i in n) {
S <- S + x^i
print(4)
}
S
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
resultado_1
f1_hxn <- function(x, n){
S <- 1
for(i in n) {
S <- S + x^i
}
return(S)
}
resultado_1 <- f1_hxn(x=2, n=3)
resultado_1
f1_hxn <- function(x, n){
S <- 1
for(i in seq(1, n, 1)) {
S <- S + x^i
}
return(S)
}
resultado_1 <- f1_hxn(x=2, n=2)
resultado_1
f2_hxn <- function(x, n){
while (n > 0) {
S <- 1 + x^n
n <- n - 1
}
return (S)
}
resultado_2 <- f2_hxn(x=2, n=2)
resultado_2
f2_hxn <- function(x, n){
S <- 1
while (n > 0) {
S <- S + x^n
n <- n - 1
}
return (S)
}
resultado_2 <- f2_hxn(x=2, n=2)
resultado_2
f3_hxn <- function(x, n){
S <- sum((x:n)^2)
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
f3_hxn <- function(x, n){
S <- 1 + sum((x:n)^2)
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
sum((x:n)^2)
sum((x:2)^2)
1 + sum((x:2)^2)
1 + sum(x^2)
f3_hxn <- function(x, n){
S <- 1 + sum(x^2)
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
1 + sum(x^2)
1 + sum(x^2)
1 + sum(x^2)
f3_hxn <- function(x, n){
S <- 1 + sum(x^2)
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
f3_hxn <- function(x, n){
S <- 1 + sum(x^n)
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
f3_hxn <- function(x, n){
S <- 1 + sum(x^1:n)
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
f3_hxn <- function(x, n){
S <- 1 + sum(x^(1:n))
return(S)
}
resultado_3 <- f3_hxn(x=2, n=2)
resultado_3
install.packages("siebanxicor")
install.packages("httr")
install.packages("libcurl")
install.packages("siebanxicor")
install.packages("libcurl")
install.packages("siebanxicor")
setToken("bbba1fa9bd99979382cfcabf3ed1164970337e377d8ae00fd9156ac0ab1c25cb")
library("siebanxicor")
# bbba1fa9bd99979382cfcabf3ed1164970337e377d8ae00fd9156ac0ab1c25cb
setToken("bbba1fa9bd99979382cfcabf3ed1164970337e377d8ae00fd9156ac0ab1c25cb")
idSeries <- "SF46407"
series <- getSeriesData(idSeries, '2016-01-01','2018-07-12')
View(series)
series
idSeries <- "SR16487"
series <- getSeriesData(idSeries, '2016-01-01','2018-07-12')
series
series$date[0]
series$date[1]
series$date
series$Date
series
series$SR16487$date
series$SR16487$date[0]
series$SR16487$date[1]
class(series$SR16487$date[1])
install.packages("kableExtra")
read.csv('tablas/t_tabla_1.csv', fill = TRUE)
getwd()
this.dir <- dirname(parent.frame(2)$ofile)
setwd(getSrcDirectory()[1])
getSrcDirectory
setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Establecer directorio de trabajo donde esta este scritp
# para cuando se hace "RUN" del codigo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# para cuando se hace "SOURCE" del codigo
# setwd(getSrcDirectory()[1])
# -- Remover Objetos de Environment
rm(list=ls())
knit_hooks$set(inline = function(x) {
prettyNum(x, big.mark=",")
})
# -- Instalar y/o cargar paquetes necesarios
pkg <- c("downloader","dplyr","fBasics","gridExtra","ggplot2","httr","jsonlite","lubridate",
"lattice","moments","matrixStats", "plyr","plotly","plot3D", "reshape2","RCurl", "stats",
"scales", "tseries","XML","xts","xlsx","xtable","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0)
install.packages(pkg[!inst], repo='https://cran.cnr.Berkeley.edu/')
instpackages <- lapply(pkg, library, character.only=TRUE)
# Establecer directorio de trabajo donde esta este scritp
# para cuando se hace "RUN" del codigo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# para cuando se hace "SOURCE" del codigo
# setwd(getSrcDirectory()[1])
# -- Remover Objetos de Environment
rm(list=ls())
knit_hooks$set(inline = function(x) {
prettyNum(x, big.mark=",")
})
# -- Instalar y/o cargar paquetes necesarios
pkg <- c("downloader","dplyr","fBasics","gridExtra","ggplot2","httr","jsonlite","lubridate",
"lattice","moments","matrixStats", "plyr","plot3D", "reshape2","RCurl", "stats",
"scales", "tseries","XML","xts","xlsx","xtable","zoo")
inst <- pkg %in% installed.packages()
if(length(pkg[!inst]) > 0)
install.packages(pkg[!inst], repo='https://cran.cnr.Berkeley.edu/')
instpackages <- lapply(pkg, library, character.only=TRUE)
read.csv('tablas/t_tabla_1.csv', fill = TRUE)
t_tabla_1 <- read.csv('tablas/t_tabla_1.csv', fill = TRUE)
View(t_tabla_1)
t_tabla_1['nombre']
t_tabla_1[['id', 'pais', 'ocurrencias']]
t_tabla_1[['id', 'pais', 'ocurrencias']]
t_tabla_1 <- read.csv('tablas/t_tabla_1.csv', fill = TRUE)
t_tabla_1[['id', 'pais', 'ocurrencias']]
t_tabla_1 <- read.csv('tablas/t_tabla_1.csv', fill = TRUE)
t_tabla_1[['id', 'pais', 'ocurrencias']]
t_tabla_1 <- read.csv('tablas/t_tabla_1.csv', fill = TRUE)
t_tabla_1 <- select(t_tabla_1, 'id', 'pais', 'ocurrencias')
t_tabla_1 <- read.csv('tablas/t_tabla_1.csv', fill = TRUE)
t_tabla_1 <- t_tabla_1[, c('id', 'pais', 'ocurrencias')]
